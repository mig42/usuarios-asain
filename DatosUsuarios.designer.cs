#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34003
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UsuariosAsain
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="usuariosasain")]
	public partial class DatosUsuariosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAsistencia(Asistencia instance);
    partial void UpdateAsistencia(Asistencia instance);
    partial void DeleteAsistencia(Asistencia instance);
    partial void InsertEstado_civil(Estado_civil instance);
    partial void UpdateEstado_civil(Estado_civil instance);
    partial void DeleteEstado_civil(Estado_civil instance);
    partial void InsertEstudios(Estudios instance);
    partial void UpdateEstudios(Estudios instance);
    partial void DeleteEstudios(Estudios instance);
    partial void InsertInteres(Interes instance);
    partial void UpdateInteres(Interes instance);
    partial void DeleteInteres(Interes instance);
    partial void InsertOrigen(Origen instance);
    partial void UpdateOrigen(Origen instance);
    partial void DeleteOrigen(Origen instance);
    partial void InsertProfesión(Profesión instance);
    partial void UpdateProfesión(Profesión instance);
    partial void DeleteProfesión(Profesión instance);
    partial void InsertSituación_laboral(Situación_laboral instance);
    partial void UpdateSituación_laboral(Situación_laboral instance);
    partial void DeleteSituación_laboral(Situación_laboral instance);
    partial void InsertTipos_de_usuario(Tipos_de_usuario instance);
    partial void UpdateTipos_de_usuario(Tipos_de_usuario instance);
    partial void DeleteTipos_de_usuario(Tipos_de_usuario instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    #endregion
		
		public DatosUsuariosDataContext() : 
				base(global::UsuariosAsain.Properties.Settings.Default.usuariosasainConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatosUsuariosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatosUsuariosDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatosUsuariosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatosUsuariosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Asistencia> Asistencia
		{
			get
			{
				return this.GetTable<Asistencia>();
			}
		}
		
		public System.Data.Linq.Table<Estado_civil> Estado_civil
		{
			get
			{
				return this.GetTable<Estado_civil>();
			}
		}
		
		public System.Data.Linq.Table<Estudios> Estudios
		{
			get
			{
				return this.GetTable<Estudios>();
			}
		}
		
		public System.Data.Linq.Table<Interes> Interes
		{
			get
			{
				return this.GetTable<Interes>();
			}
		}
		
		public System.Data.Linq.Table<Origen> Origen
		{
			get
			{
				return this.GetTable<Origen>();
			}
		}
		
		public System.Data.Linq.Table<Profesión> Profesión
		{
			get
			{
				return this.GetTable<Profesión>();
			}
		}
		
		public System.Data.Linq.Table<Situación_laboral> Situación_laboral
		{
			get
			{
				return this.GetTable<Situación_laboral>();
			}
		}
		
		public System.Data.Linq.Table<Tipos_de_usuario> Tipos_de_usuario
		{
			get
			{
				return this.GetTable<Tipos_de_usuario>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Asistencia")]
	public partial class Asistencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAsistencia;
		
		private int _IdUsuario;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private string _Comentario;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAsistenciaChanging(int value);
    partial void OnIdAsistenciaChanged();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnComentarioChanging(string value);
    partial void OnComentarioChanged();
    #endregion
		
		public Asistencia()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAsistencia", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdAsistencia
		{
			get
			{
				return this._IdAsistencia;
			}
			set
			{
				if ((this._IdAsistencia != value))
				{
					this.OnIdAsistenciaChanging(value);
					this.SendPropertyChanging();
					this._IdAsistencia = value;
					this.SendPropertyChanged("IdAsistencia");
					this.OnIdAsistenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL")]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comentario", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Comentario
		{
			get
			{
				return this._Comentario;
			}
			set
			{
				if ((this._Comentario != value))
				{
					this.OnComentarioChanging(value);
					this.SendPropertyChanging();
					this._Comentario = value;
					this.SendPropertyChanged("Comentario");
					this.OnComentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Asistencia", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="IdUsuario", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Asistencia.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Asistencia.Add(this);
						this._IdUsuario = value.IdUsuario;
					}
					else
					{
						this._IdUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Estado civil]")]
	public partial class Estado_civil : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEstadocivil;
		
		private string _Estadocivil;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEstadocivilChanging(int value);
    partial void OnIdEstadocivilChanged();
    partial void OnEstadocivilChanging(string value);
    partial void OnEstadocivilChanged();
    #endregion
		
		public Estado_civil()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstadocivil", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdEstadocivil
		{
			get
			{
				return this._IdEstadocivil;
			}
			set
			{
				if ((this._IdEstadocivil != value))
				{
					this.OnIdEstadocivilChanging(value);
					this.SendPropertyChanging();
					this._IdEstadocivil = value;
					this.SendPropertyChanged("IdEstadocivil");
					this.OnIdEstadocivilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estadocivil", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Estadocivil
		{
			get
			{
				return this._Estadocivil;
			}
			set
			{
				if ((this._Estadocivil != value))
				{
					this.OnEstadocivilChanging(value);
					this.SendPropertyChanging();
					this._Estadocivil = value;
					this.SendPropertyChanged("Estadocivil");
					this.OnEstadocivilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_civil_Usuarios", Storage="_Usuario", ThisKey="IdEstadocivil", OtherKey="IdEstadocivil")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Estado_civil = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Estado_civil = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estudios")]
	public partial class Estudios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEstudios;
		
		private string _Estudios1;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEstudiosChanging(int value);
    partial void OnIdEstudiosChanged();
    partial void OnEstudios1Changing(string value);
    partial void OnEstudios1Changed();
    #endregion
		
		public Estudios()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstudios", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdEstudios
		{
			get
			{
				return this._IdEstudios;
			}
			set
			{
				if ((this._IdEstudios != value))
				{
					this.OnIdEstudiosChanging(value);
					this.SendPropertyChanging();
					this._IdEstudios = value;
					this.SendPropertyChanged("IdEstudios");
					this.OnIdEstudiosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Estudios", Storage="_Estudios1", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Estudios1
		{
			get
			{
				return this._Estudios1;
			}
			set
			{
				if ((this._Estudios1 != value))
				{
					this.OnEstudios1Changing(value);
					this.SendPropertyChanging();
					this._Estudios1 = value;
					this.SendPropertyChanged("Estudios1");
					this.OnEstudios1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estudios_Usuarios", Storage="_Usuario", ThisKey="IdEstudios", OtherKey="IdEstudios")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Estudios = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Estudios = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Intereses")]
	public partial class Interes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdIntereses;
		
		private string _Intereses1;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdInteresesChanging(int value);
    partial void OnIdInteresesChanged();
    partial void OnIntereses1Changing(string value);
    partial void OnIntereses1Changed();
    #endregion
		
		public Interes()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdIntereses", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdIntereses
		{
			get
			{
				return this._IdIntereses;
			}
			set
			{
				if ((this._IdIntereses != value))
				{
					this.OnIdInteresesChanging(value);
					this.SendPropertyChanging();
					this._IdIntereses = value;
					this.SendPropertyChanged("IdIntereses");
					this.OnIdInteresesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Intereses", Storage="_Intereses1", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Intereses1
		{
			get
			{
				return this._Intereses1;
			}
			set
			{
				if ((this._Intereses1 != value))
				{
					this.OnIntereses1Changing(value);
					this.SendPropertyChanging();
					this._Intereses1 = value;
					this.SendPropertyChanged("Intereses1");
					this.OnIntereses1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Intereses_Usuarios", Storage="_Usuario", ThisKey="IdIntereses", OtherKey="IdIntereses")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Interes = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Interes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Origen")]
	public partial class Origen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdOrigen;
		
		private string _País;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdOrigenChanging(int value);
    partial void OnIdOrigenChanged();
    partial void OnPaísChanging(string value);
    partial void OnPaísChanged();
    #endregion
		
		public Origen()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOrigen", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdOrigen
		{
			get
			{
				return this._IdOrigen;
			}
			set
			{
				if ((this._IdOrigen != value))
				{
					this.OnIdOrigenChanging(value);
					this.SendPropertyChanging();
					this._IdOrigen = value;
					this.SendPropertyChanged("IdOrigen");
					this.OnIdOrigenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_País", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string País
		{
			get
			{
				return this._País;
			}
			set
			{
				if ((this._País != value))
				{
					this.OnPaísChanging(value);
					this.SendPropertyChanging();
					this._País = value;
					this.SendPropertyChanged("País");
					this.OnPaísChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Origen_Usuarios", Storage="_Usuario", ThisKey="IdOrigen", OtherKey="IdOrigen")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Origen = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Origen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profesión")]
	public partial class Profesión : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProfesión;
		
		private string _Profesión1;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProfesiónChanging(int value);
    partial void OnIdProfesiónChanged();
    partial void OnProfesión1Changing(string value);
    partial void OnProfesión1Changed();
    #endregion
		
		public Profesión()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProfesión", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProfesión
		{
			get
			{
				return this._IdProfesión;
			}
			set
			{
				if ((this._IdProfesión != value))
				{
					this.OnIdProfesiónChanging(value);
					this.SendPropertyChanging();
					this._IdProfesión = value;
					this.SendPropertyChanged("IdProfesión");
					this.OnIdProfesiónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Profesión", Storage="_Profesión1", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Profesión1
		{
			get
			{
				return this._Profesión1;
			}
			set
			{
				if ((this._Profesión1 != value))
				{
					this.OnProfesión1Changing(value);
					this.SendPropertyChanging();
					this._Profesión1 = value;
					this.SendPropertyChanged("Profesión1");
					this.OnProfesión1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesión_Usuarios", Storage="_Usuario", ThisKey="IdProfesión", OtherKey="IdProfesión")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Profesión = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Profesión = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Situación laboral]")]
	public partial class Situación_laboral : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSituaciónlaboral;
		
		private string _Situaciónlaboral;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSituaciónlaboralChanging(int value);
    partial void OnIdSituaciónlaboralChanged();
    partial void OnSituaciónlaboralChanging(string value);
    partial void OnSituaciónlaboralChanged();
    #endregion
		
		public Situación_laboral()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSituaciónlaboral", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdSituaciónlaboral
		{
			get
			{
				return this._IdSituaciónlaboral;
			}
			set
			{
				if ((this._IdSituaciónlaboral != value))
				{
					this.OnIdSituaciónlaboralChanging(value);
					this.SendPropertyChanging();
					this._IdSituaciónlaboral = value;
					this.SendPropertyChanged("IdSituaciónlaboral");
					this.OnIdSituaciónlaboralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Situaciónlaboral", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string Situaciónlaboral
		{
			get
			{
				return this._Situaciónlaboral;
			}
			set
			{
				if ((this._Situaciónlaboral != value))
				{
					this.OnSituaciónlaboralChanging(value);
					this.SendPropertyChanging();
					this._Situaciónlaboral = value;
					this.SendPropertyChanged("Situaciónlaboral");
					this.OnSituaciónlaboralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Situación_laboral_Usuarios", Storage="_Usuario", ThisKey="IdSituaciónlaboral", OtherKey="IdSituaciónlaboral")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Situación_laboral = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Situación_laboral = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Tipos de usuario]")]
	public partial class Tipos_de_usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoUsuario;
		
		private string _TipoUsuario;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoUsuarioChanging(int value);
    partial void OnIdTipoUsuarioChanged();
    partial void OnTipoUsuarioChanging(string value);
    partial void OnTipoUsuarioChanged();
    #endregion
		
		public Tipos_de_usuario()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoUsuario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdTipoUsuario
		{
			get
			{
				return this._IdTipoUsuario;
			}
			set
			{
				if ((this._IdTipoUsuario != value))
				{
					this.OnIdTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdTipoUsuario = value;
					this.SendPropertyChanged("IdTipoUsuario");
					this.OnIdTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoUsuario", DbType="NVarChar(50)")]
		public string TipoUsuario
		{
			get
			{
				return this._TipoUsuario;
			}
			set
			{
				if ((this._TipoUsuario != value))
				{
					this.OnTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._TipoUsuario = value;
					this.SendPropertyChanged("TipoUsuario");
					this.OnTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipos_de_usuario_Usuarios", Storage="_Usuario", ThisKey="IdTipoUsuario", OtherKey="IdTipoUsuario")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Tipos_de_usuario = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Tipos_de_usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuario;
		
		private string _Nombre;
		
		private string _Apellidos;
		
		private System.Nullable<int> _IdProfesión;
		
		private string _Dirección;
		
		private string _Ciudad;
		
		private string _EdoOProv;
		
		private string _CódPostal;
		
		private string _Región;
		
		private System.Nullable<int> _IdOrigen;
		
		private string _NombreCompañía;
		
		private string _Cargo;
		
		private string _TeléfonoTrabajo;
		
		private string _ExtensiónTrabajo;
		
		private string _TeléfonoMóvil;
		
		private string _NúmFax;
		
		private string _NomCorreoElectrónico;
		
		private System.Nullable<System.DateTime> _Fecha_nacimiento;
		
		private System.Nullable<System.DateTime> _FechaÚltimaReunión;
		
		private System.Nullable<int> _IdTipoUsuario;
		
		private System.Nullable<int> _IdEstudios;
		
		private string _Notas;
		
		private System.Nullable<int> _IdEstadocivil;
		
		private string _NombreCónyuge;
		
		private string _InteresesCónyuges;
		
		private string _NombresNiños;
		
		private string _CiudadNatal;
		
		private System.Nullable<int> _IdIntereses;
		
		private System.Nullable<int> _IdSituaciónlaboral;
		
		private EntitySet<Asistencia> _Asistencia;
		
		private EntityRef<Estado_civil> _Estado_civil;
		
		private EntityRef<Estudios> _Estudios;
		
		private EntityRef<Interes> _Interes;
		
		private EntityRef<Origen> _Origen;
		
		private EntityRef<Profesión> _Profesión;
		
		private EntityRef<Situación_laboral> _Situación_laboral;
		
		private EntityRef<Tipos_de_usuario> _Tipos_de_usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnIdProfesiónChanging(System.Nullable<int> value);
    partial void OnIdProfesiónChanged();
    partial void OnDirecciónChanging(string value);
    partial void OnDirecciónChanged();
    partial void OnCiudadChanging(string value);
    partial void OnCiudadChanged();
    partial void OnEdoOProvChanging(string value);
    partial void OnEdoOProvChanged();
    partial void OnCódPostalChanging(string value);
    partial void OnCódPostalChanged();
    partial void OnRegiónChanging(string value);
    partial void OnRegiónChanged();
    partial void OnIdOrigenChanging(System.Nullable<int> value);
    partial void OnIdOrigenChanged();
    partial void OnNombreCompañíaChanging(string value);
    partial void OnNombreCompañíaChanged();
    partial void OnCargoChanging(string value);
    partial void OnCargoChanged();
    partial void OnTeléfonoTrabajoChanging(string value);
    partial void OnTeléfonoTrabajoChanged();
    partial void OnExtensiónTrabajoChanging(string value);
    partial void OnExtensiónTrabajoChanged();
    partial void OnTeléfonoMóvilChanging(string value);
    partial void OnTeléfonoMóvilChanged();
    partial void OnNúmFaxChanging(string value);
    partial void OnNúmFaxChanged();
    partial void OnNomCorreoElectrónicoChanging(string value);
    partial void OnNomCorreoElectrónicoChanged();
    partial void OnFecha_nacimientoChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_nacimientoChanged();
    partial void OnFechaÚltimaReuniónChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaÚltimaReuniónChanged();
    partial void OnIdTipoUsuarioChanging(System.Nullable<int> value);
    partial void OnIdTipoUsuarioChanged();
    partial void OnIdEstudiosChanging(System.Nullable<int> value);
    partial void OnIdEstudiosChanged();
    partial void OnNotasChanging(string value);
    partial void OnNotasChanged();
    partial void OnIdEstadocivilChanging(System.Nullable<int> value);
    partial void OnIdEstadocivilChanged();
    partial void OnNombreCónyugeChanging(string value);
    partial void OnNombreCónyugeChanged();
    partial void OnInteresesCónyugesChanging(string value);
    partial void OnInteresesCónyugesChanged();
    partial void OnNombresNiñosChanging(string value);
    partial void OnNombresNiñosChanged();
    partial void OnCiudadNatalChanging(string value);
    partial void OnCiudadNatalChanged();
    partial void OnIdInteresesChanging(System.Nullable<int> value);
    partial void OnIdInteresesChanged();
    partial void OnIdSituaciónlaboralChanging(System.Nullable<int> value);
    partial void OnIdSituaciónlaboralChanged();
    #endregion
		
		public Usuario()
		{
			this._Asistencia = new EntitySet<Asistencia>(new Action<Asistencia>(this.attach_Asistencia), new Action<Asistencia>(this.detach_Asistencia));
			this._Estado_civil = default(EntityRef<Estado_civil>);
			this._Estudios = default(EntityRef<Estudios>);
			this._Interes = default(EntityRef<Interes>);
			this._Origen = default(EntityRef<Origen>);
			this._Profesión = default(EntityRef<Profesión>);
			this._Situación_laboral = default(EntityRef<Situación_laboral>);
			this._Tipos_de_usuario = default(EntityRef<Tipos_de_usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(255)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="NVarChar(255)")]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProfesión", DbType="Int")]
		public System.Nullable<int> IdProfesión
		{
			get
			{
				return this._IdProfesión;
			}
			set
			{
				if ((this._IdProfesión != value))
				{
					if (this._Profesión.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProfesiónChanging(value);
					this.SendPropertyChanging();
					this._IdProfesión = value;
					this.SendPropertyChanged("IdProfesión");
					this.OnIdProfesiónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dirección", DbType="NVarChar(255)")]
		public string Dirección
		{
			get
			{
				return this._Dirección;
			}
			set
			{
				if ((this._Dirección != value))
				{
					this.OnDirecciónChanging(value);
					this.SendPropertyChanging();
					this._Dirección = value;
					this.SendPropertyChanged("Dirección");
					this.OnDirecciónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ciudad", DbType="NVarChar(255)")]
		public string Ciudad
		{
			get
			{
				return this._Ciudad;
			}
			set
			{
				if ((this._Ciudad != value))
				{
					this.OnCiudadChanging(value);
					this.SendPropertyChanging();
					this._Ciudad = value;
					this.SendPropertyChanged("Ciudad");
					this.OnCiudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EdoOProv", DbType="NVarChar(255)")]
		public string EdoOProv
		{
			get
			{
				return this._EdoOProv;
			}
			set
			{
				if ((this._EdoOProv != value))
				{
					this.OnEdoOProvChanging(value);
					this.SendPropertyChanging();
					this._EdoOProv = value;
					this.SendPropertyChanged("EdoOProv");
					this.OnEdoOProvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CódPostal", DbType="NVarChar(20)")]
		public string CódPostal
		{
			get
			{
				return this._CódPostal;
			}
			set
			{
				if ((this._CódPostal != value))
				{
					this.OnCódPostalChanging(value);
					this.SendPropertyChanging();
					this._CódPostal = value;
					this.SendPropertyChanged("CódPostal");
					this.OnCódPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Región", DbType="NVarChar(255)")]
		public string Región
		{
			get
			{
				return this._Región;
			}
			set
			{
				if ((this._Región != value))
				{
					this.OnRegiónChanging(value);
					this.SendPropertyChanging();
					this._Región = value;
					this.SendPropertyChanged("Región");
					this.OnRegiónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOrigen", DbType="Int")]
		public System.Nullable<int> IdOrigen
		{
			get
			{
				return this._IdOrigen;
			}
			set
			{
				if ((this._IdOrigen != value))
				{
					if (this._Origen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdOrigenChanging(value);
					this.SendPropertyChanging();
					this._IdOrigen = value;
					this.SendPropertyChanged("IdOrigen");
					this.OnIdOrigenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreCompañía", DbType="NVarChar(255)")]
		public string NombreCompañía
		{
			get
			{
				return this._NombreCompañía;
			}
			set
			{
				if ((this._NombreCompañía != value))
				{
					this.OnNombreCompañíaChanging(value);
					this.SendPropertyChanging();
					this._NombreCompañía = value;
					this.SendPropertyChanged("NombreCompañía");
					this.OnNombreCompañíaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cargo", DbType="NVarChar(255)")]
		public string Cargo
		{
			get
			{
				return this._Cargo;
			}
			set
			{
				if ((this._Cargo != value))
				{
					this.OnCargoChanging(value);
					this.SendPropertyChanging();
					this._Cargo = value;
					this.SendPropertyChanged("Cargo");
					this.OnCargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeléfonoTrabajo", DbType="NVarChar(30)")]
		public string TeléfonoTrabajo
		{
			get
			{
				return this._TeléfonoTrabajo;
			}
			set
			{
				if ((this._TeléfonoTrabajo != value))
				{
					this.OnTeléfonoTrabajoChanging(value);
					this.SendPropertyChanging();
					this._TeléfonoTrabajo = value;
					this.SendPropertyChanged("TeléfonoTrabajo");
					this.OnTeléfonoTrabajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensiónTrabajo", DbType="NVarChar(20)")]
		public string ExtensiónTrabajo
		{
			get
			{
				return this._ExtensiónTrabajo;
			}
			set
			{
				if ((this._ExtensiónTrabajo != value))
				{
					this.OnExtensiónTrabajoChanging(value);
					this.SendPropertyChanging();
					this._ExtensiónTrabajo = value;
					this.SendPropertyChanged("ExtensiónTrabajo");
					this.OnExtensiónTrabajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeléfonoMóvil", DbType="NVarChar(30)")]
		public string TeléfonoMóvil
		{
			get
			{
				return this._TeléfonoMóvil;
			}
			set
			{
				if ((this._TeléfonoMóvil != value))
				{
					this.OnTeléfonoMóvilChanging(value);
					this.SendPropertyChanging();
					this._TeléfonoMóvil = value;
					this.SendPropertyChanged("TeléfonoMóvil");
					this.OnTeléfonoMóvilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NúmFax", DbType="NVarChar(30)")]
		public string NúmFax
		{
			get
			{
				return this._NúmFax;
			}
			set
			{
				if ((this._NúmFax != value))
				{
					this.OnNúmFaxChanging(value);
					this.SendPropertyChanging();
					this._NúmFax = value;
					this.SendPropertyChanged("NúmFax");
					this.OnNúmFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomCorreoElectrónico", DbType="NVarChar(50)")]
		public string NomCorreoElectrónico
		{
			get
			{
				return this._NomCorreoElectrónico;
			}
			set
			{
				if ((this._NomCorreoElectrónico != value))
				{
					this.OnNomCorreoElectrónicoChanging(value);
					this.SendPropertyChanging();
					this._NomCorreoElectrónico = value;
					this.SendPropertyChanged("NomCorreoElectrónico");
					this.OnNomCorreoElectrónicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Fecha nacimiento]", Storage="_Fecha_nacimiento", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha_nacimiento
		{
			get
			{
				return this._Fecha_nacimiento;
			}
			set
			{
				if ((this._Fecha_nacimiento != value))
				{
					this.OnFecha_nacimientoChanging(value);
					this.SendPropertyChanging();
					this._Fecha_nacimiento = value;
					this.SendPropertyChanged("Fecha_nacimiento");
					this.OnFecha_nacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaÚltimaReunión", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaÚltimaReunión
		{
			get
			{
				return this._FechaÚltimaReunión;
			}
			set
			{
				if ((this._FechaÚltimaReunión != value))
				{
					this.OnFechaÚltimaReuniónChanging(value);
					this.SendPropertyChanging();
					this._FechaÚltimaReunión = value;
					this.SendPropertyChanged("FechaÚltimaReunión");
					this.OnFechaÚltimaReuniónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoUsuario", DbType="Int")]
		public System.Nullable<int> IdTipoUsuario
		{
			get
			{
				return this._IdTipoUsuario;
			}
			set
			{
				if ((this._IdTipoUsuario != value))
				{
					if (this._Tipos_de_usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdTipoUsuario = value;
					this.SendPropertyChanged("IdTipoUsuario");
					this.OnIdTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstudios", DbType="Int")]
		public System.Nullable<int> IdEstudios
		{
			get
			{
				return this._IdEstudios;
			}
			set
			{
				if ((this._IdEstudios != value))
				{
					if (this._Estudios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEstudiosChanging(value);
					this.SendPropertyChanging();
					this._IdEstudios = value;
					this.SendPropertyChanged("IdEstudios");
					this.OnIdEstudiosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notas", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notas
		{
			get
			{
				return this._Notas;
			}
			set
			{
				if ((this._Notas != value))
				{
					this.OnNotasChanging(value);
					this.SendPropertyChanging();
					this._Notas = value;
					this.SendPropertyChanged("Notas");
					this.OnNotasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEstadocivil", DbType="Int")]
		public System.Nullable<int> IdEstadocivil
		{
			get
			{
				return this._IdEstadocivil;
			}
			set
			{
				if ((this._IdEstadocivil != value))
				{
					if (this._Estado_civil.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEstadocivilChanging(value);
					this.SendPropertyChanging();
					this._IdEstadocivil = value;
					this.SendPropertyChanged("IdEstadocivil");
					this.OnIdEstadocivilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreCónyuge", DbType="NVarChar(512)")]
		public string NombreCónyuge
		{
			get
			{
				return this._NombreCónyuge;
			}
			set
			{
				if ((this._NombreCónyuge != value))
				{
					this.OnNombreCónyugeChanging(value);
					this.SendPropertyChanging();
					this._NombreCónyuge = value;
					this.SendPropertyChanged("NombreCónyuge");
					this.OnNombreCónyugeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteresesCónyuges", DbType="NVarChar(1024)")]
		public string InteresesCónyuges
		{
			get
			{
				return this._InteresesCónyuges;
			}
			set
			{
				if ((this._InteresesCónyuges != value))
				{
					this.OnInteresesCónyugesChanging(value);
					this.SendPropertyChanging();
					this._InteresesCónyuges = value;
					this.SendPropertyChanged("InteresesCónyuges");
					this.OnInteresesCónyugesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombresNiños", DbType="NVarChar(255)")]
		public string NombresNiños
		{
			get
			{
				return this._NombresNiños;
			}
			set
			{
				if ((this._NombresNiños != value))
				{
					this.OnNombresNiñosChanging(value);
					this.SendPropertyChanging();
					this._NombresNiños = value;
					this.SendPropertyChanged("NombresNiños");
					this.OnNombresNiñosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CiudadNatal", DbType="NVarChar(255)")]
		public string CiudadNatal
		{
			get
			{
				return this._CiudadNatal;
			}
			set
			{
				if ((this._CiudadNatal != value))
				{
					this.OnCiudadNatalChanging(value);
					this.SendPropertyChanging();
					this._CiudadNatal = value;
					this.SendPropertyChanged("CiudadNatal");
					this.OnCiudadNatalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdIntereses", DbType="Int")]
		public System.Nullable<int> IdIntereses
		{
			get
			{
				return this._IdIntereses;
			}
			set
			{
				if ((this._IdIntereses != value))
				{
					if (this._Interes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdInteresesChanging(value);
					this.SendPropertyChanging();
					this._IdIntereses = value;
					this.SendPropertyChanged("IdIntereses");
					this.OnIdInteresesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSituaciónlaboral", DbType="Int")]
		public System.Nullable<int> IdSituaciónlaboral
		{
			get
			{
				return this._IdSituaciónlaboral;
			}
			set
			{
				if ((this._IdSituaciónlaboral != value))
				{
					if (this._Situación_laboral.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSituaciónlaboralChanging(value);
					this.SendPropertyChanging();
					this._IdSituaciónlaboral = value;
					this.SendPropertyChanged("IdSituaciónlaboral");
					this.OnIdSituaciónlaboralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Asistencia", Storage="_Asistencia", ThisKey="IdUsuario", OtherKey="IdUsuario")]
		public EntitySet<Asistencia> Asistencia
		{
			get
			{
				return this._Asistencia;
			}
			set
			{
				this._Asistencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_civil_Usuarios", Storage="_Estado_civil", ThisKey="IdEstadocivil", OtherKey="IdEstadocivil", IsForeignKey=true, DeleteRule="SET NULL")]
		public Estado_civil Estado_civil
		{
			get
			{
				return this._Estado_civil.Entity;
			}
			set
			{
				Estado_civil previousValue = this._Estado_civil.Entity;
				if (((previousValue != value) 
							|| (this._Estado_civil.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado_civil.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Estado_civil.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdEstadocivil = value.IdEstadocivil;
					}
					else
					{
						this._IdEstadocivil = default(Nullable<int>);
					}
					this.SendPropertyChanged("Estado_civil");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estudios_Usuarios", Storage="_Estudios", ThisKey="IdEstudios", OtherKey="IdEstudios", IsForeignKey=true, DeleteRule="SET NULL")]
		public Estudios Estudios
		{
			get
			{
				return this._Estudios.Entity;
			}
			set
			{
				Estudios previousValue = this._Estudios.Entity;
				if (((previousValue != value) 
							|| (this._Estudios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estudios.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Estudios.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdEstudios = value.IdEstudios;
					}
					else
					{
						this._IdEstudios = default(Nullable<int>);
					}
					this.SendPropertyChanged("Estudios");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Intereses_Usuarios", Storage="_Interes", ThisKey="IdIntereses", OtherKey="IdIntereses", IsForeignKey=true, DeleteRule="SET NULL")]
		public Interes Interes
		{
			get
			{
				return this._Interes.Entity;
			}
			set
			{
				Interes previousValue = this._Interes.Entity;
				if (((previousValue != value) 
							|| (this._Interes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Interes.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Interes.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdIntereses = value.IdIntereses;
					}
					else
					{
						this._IdIntereses = default(Nullable<int>);
					}
					this.SendPropertyChanged("Interes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Origen_Usuarios", Storage="_Origen", ThisKey="IdOrigen", OtherKey="IdOrigen", IsForeignKey=true, DeleteRule="SET NULL")]
		public Origen Origen
		{
			get
			{
				return this._Origen.Entity;
			}
			set
			{
				Origen previousValue = this._Origen.Entity;
				if (((previousValue != value) 
							|| (this._Origen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Origen.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Origen.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdOrigen = value.IdOrigen;
					}
					else
					{
						this._IdOrigen = default(Nullable<int>);
					}
					this.SendPropertyChanged("Origen");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesión_Usuarios", Storage="_Profesión", ThisKey="IdProfesión", OtherKey="IdProfesión", IsForeignKey=true, DeleteRule="SET NULL")]
		public Profesión Profesión
		{
			get
			{
				return this._Profesión.Entity;
			}
			set
			{
				Profesión previousValue = this._Profesión.Entity;
				if (((previousValue != value) 
							|| (this._Profesión.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profesión.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Profesión.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdProfesión = value.IdProfesión;
					}
					else
					{
						this._IdProfesión = default(Nullable<int>);
					}
					this.SendPropertyChanged("Profesión");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Situación_laboral_Usuarios", Storage="_Situación_laboral", ThisKey="IdSituaciónlaboral", OtherKey="IdSituaciónlaboral", IsForeignKey=true, DeleteRule="SET NULL")]
		public Situación_laboral Situación_laboral
		{
			get
			{
				return this._Situación_laboral.Entity;
			}
			set
			{
				Situación_laboral previousValue = this._Situación_laboral.Entity;
				if (((previousValue != value) 
							|| (this._Situación_laboral.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Situación_laboral.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Situación_laboral.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdSituaciónlaboral = value.IdSituaciónlaboral;
					}
					else
					{
						this._IdSituaciónlaboral = default(Nullable<int>);
					}
					this.SendPropertyChanged("Situación_laboral");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tipos_de_usuario_Usuarios", Storage="_Tipos_de_usuario", ThisKey="IdTipoUsuario", OtherKey="IdTipoUsuario", IsForeignKey=true, DeleteRule="SET NULL")]
		public Tipos_de_usuario Tipos_de_usuario
		{
			get
			{
				return this._Tipos_de_usuario.Entity;
			}
			set
			{
				Tipos_de_usuario previousValue = this._Tipos_de_usuario.Entity;
				if (((previousValue != value) 
							|| (this._Tipos_de_usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tipos_de_usuario.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Tipos_de_usuario.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdTipoUsuario = value.IdTipoUsuario;
					}
					else
					{
						this._IdTipoUsuario = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tipos_de_usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Asistencia(Asistencia entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Asistencia(Asistencia entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
}
#pragma warning restore 1591
